#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Default values for celeborn.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# we provide a default celeborn image, you can also replace to your image
# TODO rebuild celeborn official image
image:
  repository: aliyunemr/remote-shuffle-service
  pullPolicy: Always
  tag: 0.1.1-6badd20

imagePullSecrets: []

# master replicas should not less than 3
masterReplicas: 3
# worker replicas set on demand, should less than node number
workerReplicas: 5

hostNetwork: false
dnsPolicy: ClusterFirst

securityContext:
  runAsUser: 10006
  runAsGroup: 10006
  fsGroup: 10006

# Current Celeborn support followings volume type:
# - emptyDir
# - hostPath
# Note:
# hostPath only works in hostPath type using to set `volumes hostPath path`
# Celeborn Master will pick first volumes for store raft log
# diskType only works in Celeborn Worker with hostPath type to manifest local disk type
volumes:
  master:
    - mountPath: /mnt/celeborn_ratis
      hostPath: /mnt/celeborn_ratis
      type: hostPath
      capacity: 100Gi
  worker:
    - mountPath: /mnt/disk1
      hostPath: /mnt/disk1
      type: hostPath
      diskType: SSD
      capacity: 100Gi
    - mountPath: /mnt/disk2
      hostPath: /mnt/disk2
      type: hostPath
      diskType: SSD
      capacity: 100Gi
    - mountPath: /mnt/disk3
      hostPath: /mnt/disk3
      type: hostPath
      diskType: SSD
      capacity: 100Gi
    - mountPath: /mnt/disk4
      hostPath: /mnt/disk4
      type: hostPath
      diskType: SSD
      capacity: 100Gi

# celeborn configurations
celeborn:
  celeborn.master.ha.enabled: true
  celeborn.metrics.enabled: true
  celeborn.master.http.port: 9098
  celeborn.worker.http.port: 9096
  celeborn.worker.monitor.disk.enabled: false
  celeborn.shuffle.chunk.size: 8m
  celeborn.rpc.io.serverThreads: 64
  celeborn.rpc.io.numConnectionsPerPeer: 2
  celeborn.rpc.io.clientThreads: 64
  celeborn.rpc.dispatcher.numThreads: 4
  celeborn.worker.flusher.buffer.size: 256K
  celeborn.worker.fetch.io.threads: 32
  celeborn.worker.push.io.threads: 32
  celeborn.push.stageEnd.timeout: 120s
  celeborn.application.heartbeat.timeout: 120s
  celeborn.worker.heartbeat.timeout: 120s

environments:
  CELEBORN_MASTER_MEMORY: 2g
  CELEBORN_MASTER_JAVA_OPTS: "-XX:-PrintGC -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -Xloggc:gc-master.out -Dio.netty.leakDetectionLevel=advanced"
  CELEBORN_WORKER_MEMORY: 2g
  CELEBORN_WORKER_OFFHEAP_MEMORY: 12g
  CELEBORN_WORKER_JAVA_OPTS: "-XX:-PrintGC -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -Xloggc:gc-worker.out -Dio.netty.leakDetectionLevel=advanced"
  CELEBORN_NO_DAEMONIZE: 1
  TZ: "Asia/Shanghai"

podMonitor:
  enable: true
  podMetricsEndpoint:
    scheme: http
    interval: 5s
    portName: metrics

service:
  type: ClusterIP
  port: 9097

cluster:
  name: cluster

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  #master:
  #  limits:
  #    cpu: 100m
  #    memory: 128Mi
  #  requests:
  #    cpu: 100m
  #    memory: 128Mi
  #worker:
  #  limits:
  #    cpu: 100m
  #    memory: 128Mi
  #  requests:
  #    cpu: 100m
  #    memory: 128Mi

# priorityClass used for Celeborn pods
priorityClass:
  master:
    # Specifies whether a priorityClass should be created
    create: false
    # Specifies priorityClass name to be used (created if `create: true`)
    name: ~
    # half of system-cluster-critical by default
    value: 1000000000

  worker:
    create: false
    name: ~
    # celeborn master minus 1000
    value: 999999000

podAnnotations: {}

affinity:
  master:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                  - celeborn
              - key: app.kubernetes.io/role
                operator: In
                values:
                  - master
          topologyKey: kubernetes.io/hostname
  worker:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                  - celeborn
              - key: app.kubernetes.io/role
                operator: In
                values:
                  - worker
          topologyKey: "kubernetes.io/hostname"

tolerations: []

nodeSelector: {}
