// Licensed to the Apache Software Foundation (ASF) under one or more
// contributor license agreements.  See the NOTICE file distributed with
// this work for additional information regarding copyright ownership.
// The ASF licenses this file to You under the Apache License, Version 2.0
// (the "License"); you may not use this file except in compliance with
// the License.  You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto2";
option java_package = "org.apache.celeborn.service.deploy.master.clustermeta";
option java_outer_classname = "ResourceProtos";
option java_generic_services = true;
option java_generate_equals_and_hash = true;
package deploy.master.meta;

enum Type {
  UnRegisterShuffle = 12;
  RequestSlots = 13;
  ReleaseSlots = 14;
  AppHeartbeat = 15;
  AppLost = 16;
  WorkerLost = 17;
  WorkerHeartbeat = 18;
  RegisterWorker = 19;
  ReportWorkerUnavailable = 20;
  UpdatePartitionSize = 21;
  WorkerRemove = 22;
}

message ResourceRequest {
  required Type cmdType = 1; // Type of the command

  optional string requestId = 2 [default=""];

  optional RequestSlotsRequest requestSlotsRequest = 10;
  optional ReleaseSlotsRequest releaseSlotsRequest = 11;
  optional UnregisterShuffleRequest unregisterShuffleRequest = 12;
  optional AppHeartbeatRequest appHeartbeatRequest = 13;
  optional AppLostRequest appLostRequest = 14;
  optional WorkerLostRequest workerLostRequest = 15;
  optional WorkerHeartbeatRequest workerHeartbeatRequest = 16;
  optional RegisterWorkerRequest registerWorkerRequest = 17;
  optional ReportWorkerUnavailableRequest reportWorkerUnavailableRequest = 18;
  optional WorkerRemoveRequest workerRemoveRequest = 19;
}

message DiskInfo {
  required string mountPoint = 1;
  required int64 usableSpace = 2;
  required int64 avgFlushTime = 3;
  required int64 usedSlots = 4;
  required int32 status = 5;
  required int64 avgFetchTime = 6;
}

message RequestSlotsRequest {
  required string shuffleKey = 1;
  required string hostName = 2;
  map<string, SlotInfo> workerAllocations = 3;
}

message SlotInfo{
  map<string, int32> slot = 1;
}

message ReleaseSlotsRequest {
  required string shuffleKey = 1;
  repeated string workerIds = 2;
  repeated SlotInfo slots = 3;
}

message UnregisterShuffleRequest {
  required string shuffleKey = 1;
}

message AppHeartbeatRequest {
  required string appId = 1;
  required int64 time = 2;
  required int64 totalWritten = 3;
  required int64 fileCount = 4;
}

message AppLostRequest {
  required string appId = 1;
}

message WorkerLostRequest {
  required string host = 1;
  required int32 rpcPort = 2;
  required int32 pushPort = 3;
  required int32 fetchPort = 4 ;
  required int32 replicatePort = 5;
}

message WorkerRemoveRequest {
  required string host = 1;
  required int32 rpcPort = 2;
  required int32 pushPort = 3;
  required int32 fetchPort = 4 ;
  required int32 replicatePort = 5;
}

message WorkerHeartbeatRequest {
  required string host = 1;
  required int32 rpcPort = 2;
  required int32 pushPort = 3;
  required int32 fetchPort = 4;
  required int32 replicatePort = 5;
  map<string, DiskInfo> disks = 6;
  required int64 time = 7;
  map<string, ResourceConsumption> userResourceConsumption = 8;
  map<string, int64> estimatedAppDiskUsage = 9;
}

message RegisterWorkerRequest {
  required string host = 1;
  required int32 rpcPort = 2;
  required int32 pushPort = 3;
  required int32 fetchPort = 4;
  required int32 replicatePort = 5;
  map<string, DiskInfo> disks = 6;
  map<string, ResourceConsumption> userResourceConsumption = 7;
}

message ReportWorkerUnavailableRequest {
  repeated WorkerAddress unavailable = 1;
}

message WorkerAddress {
  required string host = 1;
  required int32 rpcPort = 2;
  required int32 pushPort = 3;
  required int32 fetchPort = 4;
  required int32 replicatePort = 5;
}

message UserIdentifier {
  required string tenantId = 1;
  required string name = 2;
}

message ResourceConsumption {
  required int64 diskBytesWritten = 1;
  required int64 diskFileCount = 2;
  required int64 hdfsBytesWritten = 3;
  required int64 hdfsFileCount = 4;
}

enum Status {
  OK = 1;
  INTERNAL_ERROR= 2;
}

message ResourceResponse {
  required Type cmdType = 1; // Type of the command

  optional bool success = 2 [default=true];

  optional string message = 3;

  required Status status = 4;
}
