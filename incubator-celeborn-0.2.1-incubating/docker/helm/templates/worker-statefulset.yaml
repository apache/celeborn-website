#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: celeborn-worker
  labels:
    app.kubernetes.io/name: celeborn-worker
    app.kubernetes.io/role: worker
    {{- include "celeborn.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: celeborn-worker
      app.kubernetes.io/role: worker
      {{- include "celeborn.selectorLabels" . | nindent 6 }}
  serviceName: celeborn-worker
  replicas: {{ .Values.workerReplicas }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app.kubernetes.io/name: celeborn-worker
        app.kubernetes.io/role: worker
        {{- include "celeborn.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.affinity.worker }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        fsGroup: {{ .Values.gid }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy | default "IfNotPresent"}}
        command:
          - "/usr/bin/tini"
          - "--"
          - "/bin/sh"
          - '-c'
          - "until {{ range until (.Values.masterReplicas |int) }}nslookup celeborn-master-{{ . }}.celeborn-master-svc.svc.{{ $.Values.cluster.name }}.local && {{ end }}true; do echo waiting for master; sleep 2; done && /opt/celeborn/sbin/start-worker.sh"
        resources:
          {{- toYaml .Values.resources.worker | nindent 12 }}
        ports:
          - containerPort: {{ get .Values.celeborn "celeborn.master.metrics.prometheus.port" | default 9096 }}
            name: metrics
            protocol: TCP
        volumeMounts:
          {{- if .Values.configmap }}
          - mountPath: /opt/celeborn/conf
            name: {{ include "celeborn.fullname" . }}-volume
            readOnly: true
          {{- end }}
          {{- $dirs := get .Values.celeborn "celeborn.worker.storage.dirs" | splitList "," -}}
          {{- range $index, $dir := $dirs }}
          - mountPath: {{ $dir }} 
            name: vol-{{ $index }}
          {{- end }}
        env:
          {{- range $key, $val := .Values.environments }}
          - name: {{ $key }}
            value: {{ $val | quote }}
          {{- end}}
      terminationGracePeriodSeconds: 30
      volumes:
        - configMap:
            name: {{ .Values.configmap }}
          name: {{ include "celeborn.fullname" . }}-volume
        {{- range $index, $dir := $dirs }}
        - hostPath:
            path: {{ $dir }}/worker
            type: DirectoryOrCreate
          name: vol-{{ $index }}
        {{- end }} 
